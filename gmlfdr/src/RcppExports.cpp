// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// gmmr
List gmmr(NumericVector data, NumericVector datac, int k, NumericVector pi0, NumericVector mu0, double sd0);
RcppExport SEXP _gmlfdr_gmmr(SEXP dataSEXP, SEXP datacSEXP, SEXP kSEXP, SEXP pi0SEXP, SEXP mu0SEXP, SEXP sd0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type datac(datacSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pi0(pi0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mu0(mu0SEXP);
    Rcpp::traits::input_parameter< double >::type sd0(sd0SEXP);
    rcpp_result_gen = Rcpp::wrap(gmmr(data, datac, k, pi0, mu0, sd0));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_gmlfdr_gmmr", (DL_FUNC) &_gmlfdr_gmmr, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_gmlfdr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
